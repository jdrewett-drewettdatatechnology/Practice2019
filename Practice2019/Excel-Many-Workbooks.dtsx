<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/11/2020 9:48:17 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DESKTOP-EJJTAUO"
  DTS:CreatorName="DESKTOP-EJJTAUO\jdrewett"
  DTS:DelayValidation="True"
  DTS:DTSID="{851FE100-FE3A-4106-8552-E5A2B0EEE917}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.94"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package1"
  DTS:PackageType="5"
  DTS:VersionBuild="21"
  DTS:VersionGUID="{C8F39AD2-C28A-4427-A84C-3774EABEF290}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{BAC8AE0D-AF90-405D-B581-263ACCD81890}"
      DTS:ObjectName="Excel Connection Manager">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">"Provider=Microsoft.ACE.OLEDB.12.0;Data Source="
+@[User::FileName]+";Extended Properties=\"Excel 12.0;HDR=YES\";"</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:\Users\jdrewett\Desktop\SSIS\Practice2019\Files\CustomerWorkBooks\Alexandrial.xlsx;Extended Properties=&quot;Excel 12.0 XML;HDR=YES&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BF97656A-02FF-4EC4-B29F-749795A14EE8}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileName">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\jdrewett\Desktop\SSIS\Practice2019\Files\CustomerWorkBooks\Alexandrial.xlsx</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{02F8D268-7B8C-4246-B7B9-D5C2B136DC4A}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{F027EE83-F481-4B1F-8064-04D3B52E2CA8}"
        DTS:ObjectName="{F027EE83-F481-4B1F-8064-04D3B52E2CA8}">
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="C:\Users\jdrewett\Desktop\SSIS\Practice2019\Files\CustomerWorkBooks" />
            <FEFEProperty
              FileSpec="*.xlsx" />
            <FEFEProperty
              FileNameRetrievalType="0" />
            <FEFEProperty
              Recurse="0" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:DelayValidation="True"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{C421B478-0262-49C8-BE0B-B0EE78785D57}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Import spreadsheets contained in the directory"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              defaultBufferMaxRows="100000"
              defaultBufferSize="150000000"
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Convert Columns from DT_NTEXT to DT_STR"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Inputs[Data Conversion Input].Columns[ID]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="ID"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].Columns[ID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Inputs[Data Conversion Input].Columns[SSN]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="SSN"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].Columns[SSN]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Inputs[Data Conversion Input].Columns[FName]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="FName"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].Columns[FName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Inputs[Data Conversion Input].Columns[LName]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="LName"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].Columns[LName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Inputs[Data Conversion Input].Columns[Addr]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Addr"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].Columns[Addr]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Inputs[Data Conversion Input].Columns[City]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="City"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].Columns[City]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Inputs[Data Conversion Input].Columns[State]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="State"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].Columns[State]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Inputs[Data Conversion Input].Columns[Zip]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Zip"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].Columns[Zip]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Inputs[Data Conversion Input].Columns[HomePhone]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="HomePhone"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].Columns[HomePhone]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Inputs[Data Conversion Input].Columns[AltPhone]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="AltPhone"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].Columns[AltPhone]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Inputs[Data Conversion Input].Columns[DOB]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="DOB"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].Columns[DOB]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Outputs[Data Conversion Output].Columns[Copy of ID]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Outputs[Data Conversion Output].Columns[Copy of ID]"
                          name="Copy of ID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].Columns[ID]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Outputs[Data Conversion Output].Columns[Copy of SSN]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="9"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Outputs[Data Conversion Output].Columns[Copy of SSN]"
                          name="Copy of SSN"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].Columns[SSN]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Outputs[Data Conversion Output].Columns[Copy of FName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="15"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Outputs[Data Conversion Output].Columns[Copy of FName]"
                          name="Copy of FName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].Columns[FName]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Outputs[Data Conversion Output].Columns[Copy of LName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="30"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Outputs[Data Conversion Output].Columns[Copy of LName]"
                          name="Copy of LName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].Columns[LName]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Outputs[Data Conversion Output].Columns[Copy of Addr]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Outputs[Data Conversion Output].Columns[Copy of Addr]"
                          name="Copy of Addr"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].Columns[Addr]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Outputs[Data Conversion Output].Columns[Copy of City]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="25"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Outputs[Data Conversion Output].Columns[Copy of City]"
                          name="Copy of City"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].Columns[City]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Outputs[Data Conversion Output].Columns[Copy of State]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="2"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Outputs[Data Conversion Output].Columns[Copy of State]"
                          name="Copy of State"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].Columns[State]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Outputs[Data Conversion Output].Columns[Copy of Zip]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="10"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Outputs[Data Conversion Output].Columns[Copy of Zip]"
                          name="Copy of Zip"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].Columns[Zip]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Outputs[Data Conversion Output].Columns[Copy of HomePhone]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="25"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Outputs[Data Conversion Output].Columns[Copy of HomePhone]"
                          name="Copy of HomePhone"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].Columns[HomePhone]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Outputs[Data Conversion Output].Columns[Copy of AltPhone]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="25"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Outputs[Data Conversion Output].Columns[Copy of AltPhone]"
                          name="Copy of AltPhone"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].Columns[AltPhone]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Outputs[Data Conversion Output].Columns[Copy of DOB]"
                          dataType="dbDate"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Outputs[Data Conversion Output].Columns[Copy of DOB]"
                          name="Copy of DOB"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].Columns[DOB]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Get the data from the current spreadsheet"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">City$</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].Columns[ID]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].ExternalColumns[ID]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].Columns[ID]"
                          name="ID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].Columns[SSN]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].ExternalColumns[SSN]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].Columns[SSN]"
                          name="SSN"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].Columns[FName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].ExternalColumns[FName]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].Columns[FName]"
                          name="FName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].Columns[LName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].ExternalColumns[LName]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].Columns[LName]"
                          name="LName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].Columns[Addr]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].ExternalColumns[Addr]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].Columns[Addr]"
                          name="Addr"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].Columns[City]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].ExternalColumns[City]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].Columns[City]"
                          name="City"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].Columns[State]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].ExternalColumns[State]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].Columns[State]"
                          name="State"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].Columns[Zip]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].ExternalColumns[Zip]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].Columns[Zip]"
                          name="Zip"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].Columns[HomePhone]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].ExternalColumns[HomePhone]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].Columns[HomePhone]"
                          name="HomePhone"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].Columns[AltPhone]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].ExternalColumns[AltPhone]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].Columns[AltPhone]"
                          name="AltPhone"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].Columns[DOB]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].ExternalColumns[DOB]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].Columns[DOB]"
                          name="DOB"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].ExternalColumns[ID]"
                          dataType="wstr"
                          length="255"
                          name="ID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].ExternalColumns[SSN]"
                          dataType="wstr"
                          length="255"
                          name="SSN" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].ExternalColumns[FName]"
                          dataType="wstr"
                          length="255"
                          name="FName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].ExternalColumns[LName]"
                          dataType="wstr"
                          length="255"
                          name="LName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].ExternalColumns[Addr]"
                          dataType="wstr"
                          length="255"
                          name="Addr" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].ExternalColumns[City]"
                          dataType="wstr"
                          length="255"
                          name="City" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].ExternalColumns[State]"
                          dataType="wstr"
                          length="255"
                          name="State" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].ExternalColumns[Zip]"
                          dataType="wstr"
                          length="255"
                          name="Zip" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].ExternalColumns[HomePhone]"
                          dataType="wstr"
                          length="255"
                          name="HomePhone" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].ExternalColumns[AltPhone]"
                          dataType="wstr"
                          length="255"
                          name="AltPhone" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output].ExternalColumns[DOB]"
                          dataType="wstr"
                          length="255"
                          name="DOB" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Error Output].Columns[ID]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Error Output].Columns[ID]"
                          name="ID" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Error Output].Columns[SSN]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Error Output].Columns[SSN]"
                          name="SSN" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Error Output].Columns[FName]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Error Output].Columns[FName]"
                          name="FName" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Error Output].Columns[LName]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Error Output].Columns[LName]"
                          name="LName" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Error Output].Columns[Addr]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Error Output].Columns[Addr]"
                          name="Addr" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Error Output].Columns[City]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Error Output].Columns[City]"
                          name="City" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Error Output].Columns[State]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Error Output].Columns[State]"
                          name="State" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Error Output].Columns[Zip]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Error Output].Columns[Zip]"
                          name="Zip" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Error Output].Columns[HomePhone]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Error Output].Columns[HomePhone]"
                          name="HomePhone" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Error Output].Columns[AltPhone]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Error Output].Columns[AltPhone]"
                          name="AltPhone" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Error Output].Columns[DOB]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Error Output].Columns[DOB]"
                          name="DOB" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Write records to table Customer_Xlsx_Many"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Write records to table Customer_Xlsx_Many"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[Customer_Xlsx_Many]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Write records to table Customer_Xlsx_Many.Connections[OleDbConnection]"
                      connectionManagerID="{84797F58-0282-4A38-9853-FED7F00CAB3E}:external"
                      connectionManagerRefId="Project.ConnectionManagers[LocalHost.Practice2019]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Write records to table Customer_Xlsx_Many.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Write records to table Customer_Xlsx_Many.Inputs[OLE DB Destination Input].Columns[Copy of ID]"
                          cachedDataType="i4"
                          cachedName="Copy of ID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Write records to table Customer_Xlsx_Many.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Outputs[Data Conversion Output].Columns[Copy of ID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Write records to table Customer_Xlsx_Many.Inputs[OLE DB Destination Input].Columns[Copy of SSN]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="9"
                          cachedName="Copy of SSN"
                          externalMetadataColumnId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Write records to table Customer_Xlsx_Many.Inputs[OLE DB Destination Input].ExternalColumns[SSN]"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Outputs[Data Conversion Output].Columns[Copy of SSN]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Write records to table Customer_Xlsx_Many.Inputs[OLE DB Destination Input].Columns[Copy of FName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="15"
                          cachedName="Copy of FName"
                          externalMetadataColumnId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Write records to table Customer_Xlsx_Many.Inputs[OLE DB Destination Input].ExternalColumns[FName]"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Outputs[Data Conversion Output].Columns[Copy of FName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Write records to table Customer_Xlsx_Many.Inputs[OLE DB Destination Input].Columns[Copy of LName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="30"
                          cachedName="Copy of LName"
                          externalMetadataColumnId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Write records to table Customer_Xlsx_Many.Inputs[OLE DB Destination Input].ExternalColumns[LName]"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Outputs[Data Conversion Output].Columns[Copy of LName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Write records to table Customer_Xlsx_Many.Inputs[OLE DB Destination Input].Columns[Copy of Addr]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Copy of Addr"
                          externalMetadataColumnId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Write records to table Customer_Xlsx_Many.Inputs[OLE DB Destination Input].ExternalColumns[Addr]"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Outputs[Data Conversion Output].Columns[Copy of Addr]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Write records to table Customer_Xlsx_Many.Inputs[OLE DB Destination Input].Columns[Copy of City]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="25"
                          cachedName="Copy of City"
                          externalMetadataColumnId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Write records to table Customer_Xlsx_Many.Inputs[OLE DB Destination Input].ExternalColumns[City]"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Outputs[Data Conversion Output].Columns[Copy of City]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Write records to table Customer_Xlsx_Many.Inputs[OLE DB Destination Input].Columns[Copy of State]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="2"
                          cachedName="Copy of State"
                          externalMetadataColumnId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Write records to table Customer_Xlsx_Many.Inputs[OLE DB Destination Input].ExternalColumns[State]"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Outputs[Data Conversion Output].Columns[Copy of State]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Write records to table Customer_Xlsx_Many.Inputs[OLE DB Destination Input].Columns[Copy of Zip]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="10"
                          cachedName="Copy of Zip"
                          externalMetadataColumnId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Write records to table Customer_Xlsx_Many.Inputs[OLE DB Destination Input].ExternalColumns[Zip]"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Outputs[Data Conversion Output].Columns[Copy of Zip]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Write records to table Customer_Xlsx_Many.Inputs[OLE DB Destination Input].Columns[Copy of HomePhone]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="25"
                          cachedName="Copy of HomePhone"
                          externalMetadataColumnId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Write records to table Customer_Xlsx_Many.Inputs[OLE DB Destination Input].ExternalColumns[HomePhone]"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Outputs[Data Conversion Output].Columns[Copy of HomePhone]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Write records to table Customer_Xlsx_Many.Inputs[OLE DB Destination Input].Columns[Copy of AltPhone]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="25"
                          cachedName="Copy of AltPhone"
                          externalMetadataColumnId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Write records to table Customer_Xlsx_Many.Inputs[OLE DB Destination Input].ExternalColumns[AltPhone]"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Outputs[Data Conversion Output].Columns[Copy of AltPhone]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Write records to table Customer_Xlsx_Many.Inputs[OLE DB Destination Input].Columns[Copy of DOB]"
                          cachedDataType="dbDate"
                          cachedName="Copy of DOB"
                          externalMetadataColumnId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Write records to table Customer_Xlsx_Many.Inputs[OLE DB Destination Input].ExternalColumns[DOB]"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Outputs[Data Conversion Output].Columns[Copy of DOB]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Write records to table Customer_Xlsx_Many.Inputs[OLE DB Destination Input].ExternalColumns[ID]"
                          dataType="i4"
                          name="ID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Write records to table Customer_Xlsx_Many.Inputs[OLE DB Destination Input].ExternalColumns[SSN]"
                          codePage="1252"
                          dataType="str"
                          length="9"
                          name="SSN" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Write records to table Customer_Xlsx_Many.Inputs[OLE DB Destination Input].ExternalColumns[FName]"
                          codePage="1252"
                          dataType="str"
                          length="15"
                          name="FName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Write records to table Customer_Xlsx_Many.Inputs[OLE DB Destination Input].ExternalColumns[LName]"
                          codePage="1252"
                          dataType="str"
                          length="30"
                          name="LName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Write records to table Customer_Xlsx_Many.Inputs[OLE DB Destination Input].ExternalColumns[Addr]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Addr" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Write records to table Customer_Xlsx_Many.Inputs[OLE DB Destination Input].ExternalColumns[City]"
                          codePage="1252"
                          dataType="str"
                          length="25"
                          name="City" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Write records to table Customer_Xlsx_Many.Inputs[OLE DB Destination Input].ExternalColumns[State]"
                          codePage="1252"
                          dataType="str"
                          length="2"
                          name="State" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Write records to table Customer_Xlsx_Many.Inputs[OLE DB Destination Input].ExternalColumns[Zip]"
                          codePage="1252"
                          dataType="str"
                          length="10"
                          name="Zip" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Write records to table Customer_Xlsx_Many.Inputs[OLE DB Destination Input].ExternalColumns[HomePhone]"
                          codePage="1252"
                          dataType="str"
                          length="25"
                          name="HomePhone" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Write records to table Customer_Xlsx_Many.Inputs[OLE DB Destination Input].ExternalColumns[AltPhone]"
                          codePage="1252"
                          dataType="str"
                          length="25"
                          name="AltPhone" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Write records to table Customer_Xlsx_Many.Inputs[OLE DB Destination Input].ExternalColumns[DOB]"
                          dataType="dbDate"
                          name="DOB" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Write records to table Customer_Xlsx_Many.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Write records to table Customer_Xlsx_Many.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Write records to table Customer_Xlsx_Many.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Write records to table Customer_Xlsx_Many.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Write records to table Customer_Xlsx_Many.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Write records to table Customer_Xlsx_Many.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory.Paths[Data Conversion Output]"
                  endId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Write records to table Customer_Xlsx_Many.Inputs[OLE DB Destination Input]"
                  name="Data Conversion Output"
                  startId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Foreach Loop Container\Import spreadsheets contained in the directory.Paths[Excel Source Output]"
                  endId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR.Inputs[Data Conversion Input]"
                  name="Excel Source Output"
                  startId="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet.Outputs[Excel Source Output]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Script Task"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:Disabled="True"
          DTS:DTSID="{A5C0AADE-BFB3-4323-9EDA-7B416568C357}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Script Task"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_4549bb48f82a433f8c4c261bbee8cbff"
              VSTAMajorVersion="15"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::FileName">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4549bb48f82a433f8c4c261bbee8cbff.Properties.Settings.get_Default():ST_4549bb48f82a433f8c4c261bbee8cbff.Properties.Sett" +
    "ings")]

namespace ST_4549bb48f82a433f8c4c261bbee8cbff.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_4549bb48f82a433f8c4c261bbee8cbff
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            MessageBox.Show(Dts.Variables["FileName"].Value.ToString());
			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="ST_4549bb48f82a433f8c4c261bbee8cbff.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{2299d33a-a494-4de4-985f-1ffb2dc3066a}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_4549bb48f82a433f8c4c261bbee8cbff</RootNamespace>
    <AssemblyName>ST_4549bb48f82a433f8c4c261bbee8cbff</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>ST_4549bb48f82a433f8c4c261bbee8cbff</msb:CodeName>
    <msb:DisplayName>ST_4549bb48f82a433f8c4c261bbee8cbff</msb:DisplayName>
    <msb:ProjectId>{79DBAFD5-3BB1-408F-BC5A-BB44B19D20D9}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_4549bb48f82a433f8c4c261bbee8cbff.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_4549bb48f82a433f8c4c261bbee8cbff")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_4549bb48f82a433f8c4c261bbee8cbff")]
[assembly: AssemblyCopyright("Copyright @  2020")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4549bb48f82a433f8c4c261bbee8cbff.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4549bb48f82a433f8c4c261bbee8cbff.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4549bb48f82a433f8c4c261bbee8cbff.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_4549bb48f82a433f8c4c261bbee8cbff.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_4549bb48f82a433f8c4c261bbee8cbff.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_4549bb48f82a433f8c4c261bbee8cbff.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAIsLxF4AAAAAAAAAAOAAIiALATAAAA4AAAAIAAAAAAAAyi0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAHgtAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA0A0AAAAgAAAADgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAQAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAFgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACs
LQAAAAAAAEgAAAACAAUA7CAAANQLAAABAAAAAAAAAMAsAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMoCKBAAAApvEQAACnIBAABwbxIAAApvEwAACm8UAAAKKBUA
AAomAigQAAAKFm8WAAAKKh4CKBcAAAoqHgIoGAAACiqufgEAAAQtHnITAABw0AMAAAIoGQAACm8a
AAAKcxsAAAqAAQAABH4BAAAEKhp+AgAABCoeAoACAAAEKhp+AwAABCoeAigcAAAKKi5zCAAABoAD
AAAEKgAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAANwDAAAjfgAASAQAAJAF
AAAjU3RyaW5ncwAAAADYCQAAiAAAACNVUwBgCgAAEAAAACNHVUlEAAAAcAoAAGQBAAAjQmxvYgAA
AAAAAAACAAABVx2gAQkDAAAA+gEzABYAAAEAAAAfAAAABQAAAAYAAAAJAAAAAQAAABwAAAACAAAA
EAAAAAIAAAADAAAABAAAAAEAAAAFAAAAAQAAAAEAAAAAAHUDAQAAAAAABgABAkUEBgCQAkUEBgBN
ATIEDwC5BAAABgB6AfMDBgDkAfMDBgDFAfMDBgB3AvMDBgAhAvMDBgA6AvMDBgCRAfMDBgCsAeIC
CgBVAiQDCgDMACQDBgCtA6YDBgAwATIEBgBBBaYDBgAVBGUEBgAFBN4DDgAAAV8DDgBhAV8DDgDo
AMkDBgAVAUUECgBNAyQDEgD7BHcAEgBKAHcAFgB1BQ4FFgBUBQ4FBgCXAKYDBgBTAKYDBgCEBfMD
AAAAAAEAAAAAAAEAAQABABAAvgO+AjkAAQABAAAAEABsBMgERQABAAMAAAEQAAUFyARZAAMABwAD
AQAAMwUAAD0ABAAKABEAsgNoABEAvABsABEAOgBwAAYGKQB0AFaAIwV3AFaAnAB3AFAgAAAAAIYA
xAMGAAEAgyAAAAAAhhglBAYAAQCLIAAAAACDGCUEBgABAJMgAAAAAJMIEQR7AAEAvyAAAAAAkwik
AIAAAQDGIAAAAACTCLAAhQABAM4gAAAAAJYISAWLAAIA1SAAAAAAhhglBAYAAgDdIAAAAACRGCsE
kAACAAAAAQC4AgkAJQQBABEAJQQGABkAJQQKACkAJQQQADEAJQQQADkAJQQQAEEAJQQQAEkAJQQQ
AFEAJQQQAFkAJQQQAGEAJQQQAGkAJQQGAIEAJQQGAKkAJQQVALkAJQQGAHEAKwUbAMEA9wQgAMkA
nQMlANEArgIrAIkA/AIvANkAcAUzAMEAYQUBAHEAJQQGAIkAJQQGAOkAZQA5AOkAgAVAAJEAJQRF
ALEAJQQGAAgAFABeAAgAGABjACkAcwDLAC4ACwCjAC4AEwCsAC4AGwDLAC4AIwDUAC4AKwD9AC4A
MwD9AC4AOwD9AC4AQwDUAC4ASwADAS4AUwD9AC4AWwAaAUMAYwBjAEkAcwDLAGEAewBjAGMAawBj
AAMAAQAEAAMAAAAVBJQAAADEAJkAAABMBZ4AAgAEAAMAAgAFAAUAAQAGAAUAAgAHAAcABIAAAAEA
AAAUHdlRAAAAAAAAvgIAAAQAAAAAAAAAAAAAAEwAMQAAAAAADwAAAAAAAAAAAAAAVQAFAwAAAAAE
AAAAAAAAAAAAAABMAKYDAAAAAA8AAAAAAAAAAAAAAFUACgAAAAAABAAAAAAAAAAAAAAATAAOBQAA
AAAAAAAAAQAAAHYEAAAFAAIAAAAAPE1vZHVsZT4ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2Vk
RFRTAHZhbHVlX18AbXNjb3JsaWIAZGVmYXVsdEluc3RhbmNlAFZhcmlhYmxlAFJ1bnRpbWVUeXBl
SGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUA
VHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RB
UlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARWRpdG9yQnJv
d3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29k
ZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBB
c3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZy
YW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlE
ZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2Vt
Ymx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0
VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVD
b21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQB2YWx1ZQBTVF80NTQ5YmI0OGY4MmE0MzNm
OGM0YzI2MWJiZWU4Y2JmZgBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNrcy5T
Y3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTVF80NTQ5
YmI0OGY4MmE0MzNmOGM0YzI2MWJiZWU4Y2JmZi5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVz
b3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXph
dGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBDdWx0dXJlSW5mbwBnZXRfUmVzb3VyY2VNYW5hZ2VyAC5j
dG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2
aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzQ1NDliYjQ4ZjgyYTQzM2Y4YzRjMjYxYmJlZThjYmZm
LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTVF80NTQ5YmI0
OGY4MmE0MzNmOGM0YzI2MWJiZWU4Y2JmZi5Qcm9wZXJ0aWVzAGdldF9WYXJpYWJsZXMAU2V0dGlu
Z3MAU3lzdGVtLldpbmRvd3MuRm9ybXMAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAT2Jq
ZWN0AGdldF9EZWZhdWx0AERpYWxvZ1Jlc3VsdABzZXRfVGFza1Jlc3VsdABTaG93AE1lc3NhZ2VC
b3gAZ2V0X0Fzc2VtYmx5AAAAAAARRgBpAGwAZQBOAGEAbQBlAABxUwBUAF8ANAA1ADQAOQBiAGIA
NAA4AGYAOAAyAGEANAAzADMAZgA4AGMANABjADIANgAxAGIAYgBlAGUAOABjAGIAZgBmAC4AUABy
AG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAABj8PmUcnIxR7eDKzEvh9Y1
AAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFRBCAAEmEEIAASZQUgARJpHAMgABwDIAAOBQABEXEO
BgABEnUReQQgABJ9BiACAQ4SfQi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJJAwYSTQMG
EhACBggDBhEUBAAAEkkEAAASTQUAAQESTQQAABIQAwAAAQQIABJJBAgAEk0ECAASEAgBAAgAAAAA
AB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfNDU0OWJiNDhm
ODJhNDMzZjhjNGMyNjFiYmVlOGNiZmYAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMAAASQEA
Gi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVU
IEZyYW1ld29yayA0Lje0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VS
ZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGlj
S2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJj
ZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAoC0AAAAAAAAAAAAAui0AAAAgAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAKwtAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAA
AAAASAAAAFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYA
TwAAAAAAvQTv/gAAAQAAAAEA2VEUHQAAAQDZURQdPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAA
AEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkA
bwBuAAAAAAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAw
ADAAMAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAA
YQBuAHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBu
AAAAAABTAFQAXwA0ADUANAA5AGIAYgA0ADgAZgA4ADIAYQA0ADMAMwBmADgAYwA0AGMAMgA2ADEA
YgBiAGUAZQA4AGMAYgBmAGYAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAw
AC4ANwA0ADQANAAuADIAMAA5ADUAMwAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUA
AABTAFQAXwA0ADUANAA5AGIAYgA0ADgAZgA4ADIAYQA0ADMAMwBmADgAYwA0AGMAMgA2ADEAYgBi
AGUAZQA4AGMAYgBmAGYALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgA
dAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIAMAAAACoAAQABAEwAZQBnAGEAbABU
AHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUA
bgBhAG0AZQAAAFMAVABfADQANQA0ADkAYgBiADQAOABmADgAMgBhADQAMwAzAGYAOABjADQAYwAy
ADYAMQBiAGIAZQBlADgAYwBiAGYAZgAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEA
bQBlAAAAAABTAFQAXwA0ADUANAA5AGIAYgA0ADgAZgA4ADIAYQA0ADMAMwBmADgAYwA0AGMAMgA2
ADEAYgBiAGUAZQA4AGMAYgBmAGYAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4A
AAAxAC4AMAAuADcANAA0ADQALgAyADAAOQA1ADMAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAg
AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADcANAA0ADQALgAyADAAOQA1ADMAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAMAAAAzD0A
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{C393FEA4-A74D-4B7B-8149-918853B717F5}"
          DTS:ObjectName="{C393FEA4-A74D-4B7B-8149-918853B717F5}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::FileName" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Truncate Table Customer_Xlsx_Many"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{D229BE29-7C5A-4787-9611-9188ABC0BC39}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Truncate Table Customer_Xlsx_Many"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{84797F58-0282-4A38-9853-FED7F00CAB3E}"
          SQLTask:SqlStatementSource="IF EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'Customer_Xlsx_Many')&#xA;BEGIN&#xA;&#x9;TRUNCATE TABLE Customer_Xlsx_Many&#xA;END" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{D6492440-8602-4610-8D60-753A9DE4996E}"
      DTS:From="Package\Truncate Table Customer_Xlsx_Many"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Foreach Loop Container" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="305,42"
          Id="Package\Foreach Loop Container\Import spreadsheets contained in the directory"
          TopLeft="37,87" />
        <NodeLayout
          Size="134,42"
          Id="Package\Foreach Loop Container\Script Task"
          TopLeft="150,38" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="371,184"
          Size="371,227"
          Id="Package\Foreach Loop Container"
          TopLeft="215,128" />
        <NodeLayout
          Size="263,42"
          Id="Package\Truncate Table Customer_Xlsx_Many"
          TopLeft="255,32" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="386.5,74">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="14,54"
              Start="0,0"
              End="14,46.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23" />
                  <mssgle:CubicBezierSegment
                    Point1="0,23"
                    Point2="0,27"
                    Point3="4,27" />
                  <mssgle:LineSegment
                    End="10,27" />
                  <mssgle:CubicBezierSegment
                    Point1="10,27"
                    Point2="14,27"
                    Point3="14,31" />
                  <mssgle:LineSegment
                    End="14,46.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Import spreadsheets contained in the directory">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="283,42"
          Id="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet"
          TopLeft="328,45" />
        <NodeLayout
          Size="306,42"
          Id="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Convert Columns from DT_NTEXT to DT_STR"
          TopLeft="329,141" />
        <NodeLayout
          Size="294,42"
          Id="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Write records to table Customer_Xlsx_Many"
          TopLeft="331,241" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Import spreadsheets contained in the directory.Paths[Excel Source Output]"
          TopLeft="469.5,87">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="12.5,54"
              Start="0,0"
              End="12.5,46.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23" />
                  <mssgle:CubicBezierSegment
                    Point1="0,23"
                    Point2="0,27"
                    Point3="4,27" />
                  <mssgle:LineSegment
                    End="8.5,27" />
                  <mssgle:CubicBezierSegment
                    Point1="8.5,27"
                    Point2="12.5,27"
                    Point3="12.5,31" />
                  <mssgle:LineSegment
                    End="12.5,46.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Import spreadsheets contained in the directory.Paths[Data Conversion Output]"
          TopLeft="480,183">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,58"
              Start="0,0"
              End="0,50.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,50.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Get the data from the current spreadsheet">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Import spreadsheets contained in the directory\Write records to table Customer_Xlsx_Many">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>